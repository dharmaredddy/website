{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\New folder\\\\src\\\\components\\\\PropertyList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nconst PropertyList = ({\n  properties,\n  onUploadImages\n}) => {\n  const handleImageUpload = id => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.multiple = true;\n    input.accept = 'image/*';\n    input.onchange = async event => {\n      const files = event.target.files;\n      const newImagesPromises = Array.from(files).map(file => {\n        return new Promise(resolve => {\n          const reader = new FileReader();\n          reader.onload = e => {\n            resolve(e.target.result); // Resolve with the image data URL\n          };\n          reader.readAsDataURL(file);\n        });\n      });\n      const newImages = await Promise.all(newImagesPromises); // Wait for all promises to resolve\n\n      if (newImages.length > 0) {\n        onUploadImages(id, newImages);\n      }\n    };\n    input.click();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"property-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, properties.map(property => /*#__PURE__*/React.createElement(\"div\", {\n    key: property.id,\n    className: \"property-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, property.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Location: \", property.location), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Type: \", property.type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Price: \\u20B9\", property.price), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Size: \", property.size, \" sqft\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Bedrooms: \", property.bedrooms), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Bathrooms: \", property.bathrooms), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Parking: \", property.parking ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"property-images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, property.images.map((image, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: image,\n    alt: `${property.name} ${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleImageUpload(property.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Upload Images\"))));\n};\nPropertyList.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    bedrooms: PropTypes.number.isRequired,\n    bathrooms: PropTypes.number.isRequired,\n    images: PropTypes.arrayOf(PropTypes.string).isRequired,\n    parking: PropTypes.bool.isRequired\n  })).isRequired,\n  onUploadImages: PropTypes.func.isRequired\n};\nexport default PropertyList;","map":{"version":3,"names":["React","PropTypes","PropertyList","properties","onUploadImages","handleImageUpload","id","input","document","createElement","type","multiple","accept","onchange","event","files","target","newImagesPromises","Array","from","map","file","Promise","resolve","reader","FileReader","onload","e","result","readAsDataURL","newImages","all","length","click","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","property","key","name","location","price","size","bedrooms","bathrooms","parking","images","image","index","src","alt","onClick","propTypes","arrayOf","shape","number","isRequired","string","bool","func"],"sources":["C:/Users/dell/Desktop/New folder/src/components/PropertyList.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PropertyList = ({ properties, onUploadImages }) => {\r\n  const handleImageUpload = (id) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.multiple = true;\r\n    input.accept = 'image/*';\r\n\r\n    input.onchange = async (event) => {\r\n      const files = event.target.files;\r\n      const newImagesPromises = Array.from(files).map((file) => {\r\n        return new Promise((resolve) => {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            resolve(e.target.result); // Resolve with the image data URL\r\n          };\r\n          reader.readAsDataURL(file);\r\n        });\r\n      });\r\n\r\n      const newImages = await Promise.all(newImagesPromises); // Wait for all promises to resolve\r\n\r\n      if (newImages.length > 0) {\r\n        onUploadImages(id, newImages);\r\n      }\r\n    };\r\n\r\n    input.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"property-list\">\r\n      {properties.map((property) => (\r\n        <div key={property.id} className=\"property-card\">\r\n          <h2>{property.name}</h2>\r\n          <p>Location: {property.location}</p>\r\n          <p>Type: {property.type}</p>\r\n          <p>Price: â‚¹{property.price}</p>\r\n          <p>Size: {property.size} sqft</p>\r\n          <p>Bedrooms: {property.bedrooms}</p>\r\n          <p>Bathrooms: {property.bathrooms}</p>\r\n          <p>Parking: {property.parking ? 'Yes' : 'No'}</p>\r\n          <div className=\"property-images\">\r\n            {property.images.map((image, index) => (\r\n              <img key={index} src={image} alt={`${property.name} ${index}`} />\r\n            ))}\r\n          </div>\r\n          <button onClick={() => handleImageUpload(property.id)}>Upload Images</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nPropertyList.propTypes = {\r\n  properties: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      location: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      size: PropTypes.number.isRequired,\r\n      bedrooms: PropTypes.number.isRequired,\r\n      bathrooms: PropTypes.number.isRequired,\r\n      images: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      parking: PropTypes.bool.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onUploadImages: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PropertyList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}